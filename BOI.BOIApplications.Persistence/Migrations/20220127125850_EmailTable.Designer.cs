// <auto-generated />
using System;
using BOI.BOIApplications.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BOI.BOIApplications.Persistence.Migrations
{
    [DbContext(typeof(BOIDbContext))]
    [Migration("20220127125850_EmailTable")]
    partial class EmailTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LGAId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("LGAId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"), 1L, 1);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailId"), 1L, 1);

                    b.Property<string>("BccRecipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcRecipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateLogged")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("EmailAttachmentId")
                        .HasColumnType("int");

                    b.Property<bool>("HasAlternateView")
                        .HasColumnType("bit");

                    b.Property<bool>("HasAttachment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHtml")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ResponseTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("SendAndReply")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("SendDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToRecipient")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailId");

                    b.HasIndex("EmailAttachmentId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.EmailAttachment", b =>
                {
                    b.Property<int>("EmailAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailAttachmentId"), 1L, 1);

                    b.Property<byte[]>("Attachment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailAttachmentId");

                    b.ToTable("EmailAttachments");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.LGA", b =>
                {
                    b.Property<int>("LGAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LGAId"), 1L, 1);

                    b.Property<string>("LGAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("LGAId");

                    b.HasIndex("StateId");

                    b.ToTable("LGAs");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"), 1L, 1);

                    b.Property<int?>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryID");

                    b.ToTable("States");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.City", b =>
                {
                    b.HasOne("BOI.BOIApplications.Domain.Entities.LGA", null)
                        .WithMany("Cities")
                        .HasForeignKey("LGAId");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.Email", b =>
                {
                    b.HasOne("BOI.BOIApplications.Domain.Entities.EmailAttachment", null)
                        .WithMany("Emails")
                        .HasForeignKey("EmailAttachmentId");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.LGA", b =>
                {
                    b.HasOne("BOI.BOIApplications.Domain.Entities.State", null)
                        .WithMany("LGAs")
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.State", b =>
                {
                    b.HasOne("BOI.BOIApplications.Domain.Entities.Country", null)
                        .WithMany("States")
                        .HasForeignKey("CountryID");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.EmailAttachment", b =>
                {
                    b.Navigation("Emails");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.LGA", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("BOI.BOIApplications.Domain.Entities.State", b =>
                {
                    b.Navigation("LGAs");
                });
#pragma warning restore 612, 618
        }
    }
}
